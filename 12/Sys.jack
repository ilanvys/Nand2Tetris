// This file is part of nand2tetris, as taught in The Hebrew University, and
// was written by Aviv Yaish. It is an extension to the specifications given
// [here](https://www.nand2tetris.org) (Shimon Schocken and Noam Nisan, 2017),
// as allowed by the Creative Common Attribution-NonCommercial-ShareAlike 3.0
// Unported [License](https://creativecommons.org/licenses/by-nc-sa/3.0/).

/**
 * A library that supports various program execution services.
 */
class Sys {
    /** Performs all the initializations required by the OS. */
    function void init()
    {
        do Memory.init();
        do Math.init();
        do Screen.init();
        do Output.init();
        do Keyboard.init();
        do Main.main();
        do Sys.halt();
        
        return;
    }

    /** Halts program execution. */
    function void halt()
    {
        var boolean x;
        let x = true;
        while (x)
        {
            let x = true;
        }
        
        return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration)
    {
        var int i,j;
        let i = 0;
        let j = 1;
        while (i < duration) {
            while (j < i) {
                let j = (j + 10);
            }
            let j = 1;
            let i = (i + 1);
        }

        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode)
    {
        do Output.printString("ERR<");
        do Output.printString(errorCode);
        do Output.printString(">");
        do Sys.halt();

        return;
    }
}
